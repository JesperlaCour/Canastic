@page "/players"
@inject PlayerService _playerService
@inject ISnackbar snackBar
@inject IDialogService DialogService

@if (players is null)
{
<MudGrid>
    <MudItem>
        <MudProgressCircular Size="Size.Large" Color="Color.Primary" Indeterminate="true" />
    </MudItem>
</MudGrid>
}
else
{




<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">tilføj / rediger spiller</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField @bind-Value="player.PlayerName" Label="spiller navn" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <br />
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Success" OnClick="Save">Gem</MudButton>
    </MudCardContent>
</MudCard>
<br />
<MudTable Hover="false" Elevation="25" Items="players" Filter="new Func<PlayerDTO, bool>(Search)" @bind-customer="player">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Spillere</MudText>
        <MudToolBarSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Søg efter spiller..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Navn</MudTh>
        <MudTh>Har spillet siden</MudTh>
        <MudTh>Sejre</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Student Name">@context.PlayerName</MudTd>
        <MudTd DataLabel="Age">@context.PlayedSince</MudTd>
        <MudTd DataLabel="Address">@context.TotalWins</MudTd>
        <MudTd DataLabel="">
            <MudFab @onclick="@(()=>Edit(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
            <MudFab @onclick="@(()=>Delete(@context.Id))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 5,10,20,50}" />
    </PagerContent>
</MudTable>
}



@code {
    private string searchString = "";

    private PlayerDTO player = new();
    private List<PlayerDTO> players;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            players = await _playerService.GetPlayers();
        }
        catch (Exception)
        {
            var result = await DialogService.ShowMessageBox("Fejl", "Kan ikke indlæse fra database", yesText: "accepter");

        }

    }

    private bool Search(PlayerDTO player)
    {
        if (player.PlayerName is not null && player.PlayerName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
        return false;
    }

    private async void Save()
    {
        player.PlayedSince = DateTime.Now;
        await _playerService.PostPlayer(player);
        snackBar.Add("Ny spiller gemt", Severity.Success);
        players = await _playerService.GetPlayers();
        player = new();
        StateHasChanged();
    }

    private void Edit(Guid id)
    {
        player = players.FirstOrDefault(p => p.Id == id);
        StateHasChanged();
    }

    private async void Delete(Guid id)
    {
        await _playerService.DeletePlayer(id);
        snackBar.Add("Spiller er slettet!", Severity.Success);
        players = await _playerService.GetPlayers();
        StateHasChanged();
    }

}



